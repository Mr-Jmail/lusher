{"version":3,"sources":["webpack://luscher-test/webpack/universalModuleDefinition","webpack://luscher-test/webpack/bootstrap","webpack://luscher-test/./src/assets/i18n sync ^\\.\\/.*\\.asterisk\\.json$","webpack://luscher-test/./src/assets/i18n sync ^\\.\\/.*\\.equal\\.json$","webpack://luscher-test/./src/assets/i18n sync ^\\.\\/.*\\.minus\\.json$","webpack://luscher-test/./src/assets/i18n sync ^\\.\\/.*\\.plus\\.json$","webpack://luscher-test/./src/constants/bad-colors.ts","webpack://luscher-test/./src/constants/good-colors.ts","webpack://luscher-test/./src/constants/luscher-colors.ts","webpack://luscher-test/./src/constants/minus-function-titles.ts","webpack://luscher-test/./src/helpers/get-interpretation.ts","webpack://luscher-test/./src/helpers/validate-selection.ts","webpack://luscher-test/./src/index.ts","webpack://luscher-test/./src/single-stage-test.ts","webpack://luscher-test/./src/two-stage-test.ts","webpack://luscher-test/./src/types/enums/color-hex.enum.ts","webpack://luscher-test/./src/types/enums/emotional-state.enum.ts","webpack://luscher-test/./src/types/enums/interpretation-language.enum.ts","webpack://luscher-test/./src/types/enums/main-color.enum.ts","webpack://luscher-test/./src/types/enums/sign.enum.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","map","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","badColors","goodColors","luscherColors","hex","ColorHex","GRAY","index","MainColor","BLUE","GREEN","RED","YELLOW","PURPLE","BROWN","BLACK","minusFunctionTitles","physcho","ru","en","physio","inBrief","getInterpretation","lang","Promise","all","then","default","plusFunctionJson","asteriskFunctionJson","equalFunctionJson","minusFunctionJson","Sign","PLUS","ASTERISK","EQUAL","MINUS","validateSelection","colors","Array","isArray","length","Set","size","forEach","color","SingleStageTest","TwoStageTest","EmotionalState","InterpretationLanguage","interpret","multiInterpretations","colorGroups","getGroups","entries","signString","groupKey","join","title","interpretation","initalGroups","reduce","push","firstSelection","secondSelection","emotionalStates","anxietyLevels","signs","selections","getPsychologicalState","firstEmotionalStates","secondEmotionalStates","pairs","getPairs","totalAnxietyLevel","getTotalAnxietyLevel","anxietyLevelInterpretation","getAnxietyLevelInterpretation","groups","getSigns","signMaps","getSignMaps","interpretationPairs","getInterpretationPairs","ENGLISH","interpretations","first","getInterpretationForSelection","second","filter","Boolean","sign","signInterpretationSource","signInterpretation","pair","getPsychologicalStateForSelection","selection","lastCompensationIndex","firstDisturbanceIndex","includes","COMPENSATION","DISTURBANCE","getTotalAnxietyLevelForSelection","selectionAnxietyLevels","values","total","currentAnxietyLevel","firstColorIndex","indexOf","colorToCompareTo","previousColor","nextColor","isPreviousMatched","isNextMatched","getGroupsForSelection","hasNext","isEmotional","isNextEmotional","hasGroup","find","hasPairWithNext","hasCurrentColor","hasNextColor","isNextAlreadyInPair","hasNextAfterNextColor","getSignsForSelection","firstColorWithoutSign","asteriskGroup","group","equalGroup","equalGroupColor","groupColor","hasEqual","getSignMapForSelection","initialSignMap","indexMap","colorSigns","Number","sort","a","b","aIndex","bIndex","mainColor","getInterpretationPairsForSelection","signMap","initialInterpretationPairs","toString"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"luscher-test\"] = factory();\n\telse\n\t\troot[\"luscher-test\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","var map = {\n\t\"./en/en.asterisk.json\": \"./src/assets/i18n/en/en.asterisk.json\",\n\t\"./multi/multi.asterisk.json\": \"./src/assets/i18n/multi/multi.asterisk.json\",\n\t\"./ru/ru.asterisk.json\": \"./src/assets/i18n/ru/ru.asterisk.json\",\n\t\"./template.asterisk.json\": \"./src/assets/i18n/template.asterisk.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/assets/i18n sync recursive ^\\\\.\\\\/.*\\\\.asterisk\\\\.json$\";","var map = {\n\t\"./en/en.equal.json\": \"./src/assets/i18n/en/en.equal.json\",\n\t\"./multi/multi.equal.json\": \"./src/assets/i18n/multi/multi.equal.json\",\n\t\"./ru/ru.equal.json\": \"./src/assets/i18n/ru/ru.equal.json\",\n\t\"./template.equal.json\": \"./src/assets/i18n/template.equal.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/assets/i18n sync recursive ^\\\\.\\\\/.*\\\\.equal\\\\.json$\";","var map = {\n\t\"./en/en.minus.json\": \"./src/assets/i18n/en/en.minus.json\",\n\t\"./multi/multi.minus.json\": \"./src/assets/i18n/multi/multi.minus.json\",\n\t\"./ru/ru.minus.json\": \"./src/assets/i18n/ru/ru.minus.json\",\n\t\"./template.minus.json\": \"./src/assets/i18n/template.minus.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/assets/i18n sync recursive ^\\\\.\\\\/.*\\\\.minus\\\\.json$\";","var map = {\n\t\"./en/en.plus.json\": \"./src/assets/i18n/en/en.plus.json\",\n\t\"./multi/multi.plus.json\": \"./src/assets/i18n/multi/multi.plus.json\",\n\t\"./ru/ru.plus.json\": \"./src/assets/i18n/ru/ru.plus.json\",\n\t\"./template.plus.json\": \"./src/assets/i18n/template.plus.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/assets/i18n sync recursive ^\\\\.\\\\/.*\\\\.plus\\\\.json$\";","import { MainColor } from '@/types/enums/main-color.enum';\r\n\r\nexport const badColors: MainColor[] = [0, 7, 6];\r\n","import { MainColor } from '@/types/enums/main-color.enum';\r\n\r\nexport const goodColors: MainColor[] = [1, 2, 3, 4];\r\n","import { ColorHex } from '@/types/enums/color-hex.enum';\r\nimport { MainColor } from '@/types/enums/main-color.enum';\r\n\r\nexport interface LuscherColor {\r\n  hex: ColorHex;\r\n  id: keyof typeof MainColor;\r\n  index: MainColor;\r\n}\r\n\r\nexport const luscherColors: LuscherColor[] = [\r\n  {\r\n    hex: ColorHex.GRAY,\r\n    id: 'GRAY',\r\n    index: MainColor.GRAY,\r\n  },\r\n  {\r\n    hex: ColorHex.BLUE,\r\n    id: 'BLUE',\r\n    index: MainColor.BLUE,\r\n  },\r\n  {\r\n    hex: ColorHex.GREEN,\r\n    id: 'GREEN',\r\n    index: MainColor.GREEN,\r\n  },\r\n  {\r\n    hex: ColorHex.RED,\r\n    id: 'RED',\r\n    index: MainColor.RED,\r\n  },\r\n  {\r\n    hex: ColorHex.YELLOW,\r\n    id: 'YELLOW',\r\n    index: MainColor.YELLOW,\r\n  },\r\n  {\r\n    hex: ColorHex.PURPLE,\r\n    id: 'PURPLE',\r\n    index: MainColor.PURPLE,\r\n  },\r\n  {\r\n    hex: ColorHex.BROWN,\r\n    id: 'BROWN',\r\n    index: MainColor.BROWN,\r\n  },\r\n  {\r\n    hex: ColorHex.BLACK,\r\n    id: 'BLACK',\r\n    index: MainColor.BLACK,\r\n  },\r\n];\r\n","import { MinusFunction } from '@/types/minus-function.interface';\r\nimport { Translations } from '@/types/translations.interface';\r\n\r\nexport const minusFunctionTitles: MinusFunction<Translations<string>> = {\r\n  physcho: {\r\n    ru: 'Психологическая интерпретация',\r\n    en: 'Psychological interpretation',\r\n  },\r\n  physio: {\r\n    ru: 'Физиологическая интерпретация',\r\n    en: 'Physiological interpretation',\r\n  },\r\n  inBrief: {\r\n    ru: 'Коротко',\r\n    en: 'In brief',\r\n  },\r\n};\r\n","import { Interpretation } from '@/types/interpretation.type';\r\nimport { Translations } from '@/types/translations.interface';\r\nimport { Sign } from '@/types/enums/sign.enum';\r\nimport { SignMap } from '@/types/sign-map.type';\r\n\r\n/**\r\n * Getting interpretation from .json files using passed language\r\n * @param lang Interpretation language\r\n */\r\nexport const getInterpretation = async (\r\n  lang: keyof Translations<unknown> | 'multi',\r\n): Promise<SignMap<Interpretation>> => {\r\n  const [\r\n    plusFunctionJson,\r\n    asteriskFunctionJson,\r\n    equalFunctionJson,\r\n    minusFunctionJson,\r\n  ] = await Promise.all([\r\n    import(`@/assets/i18n/${lang}/${lang}.plus.json`).then((module) => module.default),\r\n    import(`@/assets/i18n/${lang}/${lang}.asterisk.json`).then((module) => module.default),\r\n    import(`@/assets/i18n/${lang}/${lang}.equal.json`).then((module) => module.default),\r\n    import(`@/assets/i18n/${lang}/${lang}.minus.json`).then((module) => module.default),\r\n  ]);\r\n\r\n  return {\r\n    [Sign.PLUS]: plusFunctionJson,\r\n    [Sign.ASTERISK]: asteriskFunctionJson,\r\n    [Sign.EQUAL]: equalFunctionJson,\r\n    [Sign.MINUS]: minusFunctionJson,\r\n  };\r\n};\r\n","import { MainColor } from '@/types/enums/main-color.enum';\r\n\r\nexport const validateSelection = (colors: MainColor[]) => {\r\n  if (!colors || !Array.isArray(colors) || colors.length !== 8) {\r\n    throw new Error('You shold pass an array of 8 colors. No more, no less');\r\n  }\r\n\r\n  if (colors.length !== new Set(colors).size) {\r\n    throw new Error('You shold pass an array of unique colors');\r\n  }\r\n\r\n  colors.forEach((color) => {\r\n    if (typeof color !== 'number') {\r\n      throw new Error('Colors should be represented as numbers');\r\n    }\r\n\r\n    if (color < 0 || color > 7) {\r\n      throw new Error('Colors numbers should be in a range from 0 to 7');\r\n    }\r\n  });\r\n};\r\n","// Luscher tests\r\nexport { SingleStageTest } from './single-stage-test';\r\nexport { TwoStageTest } from './two-stage-test';\r\n\r\n// Models\r\nexport { ColorMap } from './types/color-map.type';\r\nexport { FunctionKeys } from './types/function-keys';\r\nexport { InterpretationSection } from './types/interpretation-section.interface';\r\nexport { Interpretation } from './types/interpretation.type';\r\nexport { LuscherFunction } from './types/luscher-function.interface';\r\nexport { MinusFunction } from './types/minus-function.interface';\r\nexport { SignMap } from './types/sign-map.type';\r\nexport { Translations } from './types/translations.interface';\r\nexport { InterpretationText } from './types/interpretation-text.type';\r\n\r\n// Enums\r\nexport { ColorHex } from './types/enums/color-hex.enum';\r\nexport { EmotionalState } from './types/enums/emotional-state.enum';\r\nexport { InterpretationLanguage } from './types/enums/interpretation-language.enum';\r\nexport { MainColor } from './types/enums/main-color.enum';\r\nexport { Sign } from './types/enums/sign.enum';\r\n\r\n// Constatns\r\nexport { luscherColors, LuscherColor } from './constants/luscher-colors';\r\nexport { badColors } from './constants/bad-colors';\r\nexport { goodColors } from './constants/good-colors';\r\nexport { minusFunctionTitles } from './constants/minus-function-titles';\r\n","import { MainColor } from './types/enums/main-color.enum';\r\nimport { Sign } from './types/enums/sign.enum';\r\nimport { InterpretationSection } from './types/interpretation-section.interface';\r\nimport { SignMap } from './types/sign-map.type';\r\nimport { FunctionKeys } from './types/function-keys';\r\nimport { validateSelection } from './helpers/validate-selection';\r\nimport { getInterpretation } from './helpers/get-interpretation';\r\nimport { Translations } from './types/translations.interface';\r\n\r\nexport class SingleStageTest {\r\n    /** Single stage color selection */\r\n    readonly colors: MainColor[];\r\n\r\n    constructor(colors: MainColor[]) {\r\n      validateSelection(colors);\r\n\r\n      this.colors = colors;\r\n    }\r\n    /**\r\n     * @param lang Interpretation language\r\n     * @returns Interpretation on chosen language\r\n     */\r\n    async interpret(lang: keyof Translations<any> | 'multi' = 'multi'): Promise<InterpretationSection[]> {\r\n      const multiInterpretations = await getInterpretation(lang);\r\n      const colorGroups = this.getGroups();\r\n\r\n      const interpretation = Object.entries(colorGroups)\r\n        .map(([signString, colorGroup]): InterpretationSection => {\r\n          const groupKey = colorGroup.join('') as FunctionKeys;\r\n          const sign = signString as Sign;\r\n          const {\r\n            title,\r\n            // @ts-ignore (for jest tests)\r\n            [groupKey]: signInterpretation,\r\n          } = multiInterpretations[sign];\r\n\r\n          return {\r\n            title,\r\n            interpretation: [signInterpretation],\r\n          };\r\n        });\r\n\r\n      return interpretation;\r\n    }\r\n    \r\n    /** @returns Color pairs for each sign */\r\n    private getGroups(): SignMap<MainColor[]> {\r\n      const initalGroups: SignMap<MainColor[]> = {\r\n        [Sign.PLUS]: [],\r\n        [Sign.ASTERISK]: [],\r\n        [Sign.EQUAL]: [],\r\n        [Sign.MINUS]: [],\r\n      };\r\n\r\n      return this.colors.reduce((colorGroups, color, index) => {\r\n        switch (index) {\r\n        case 0:\r\n        case 1:\r\n          colorGroups[Sign.PLUS].push(color);\r\n          break;\r\n\r\n        case 2:\r\n        case 3:\r\n          colorGroups[Sign.ASTERISK].push(color);\r\n          break;\r\n\r\n        case 4:\r\n        case 5:\r\n          colorGroups[Sign.EQUAL].push(color);\r\n          break;\r\n\r\n        default:\r\n          colorGroups[Sign.MINUS].push(color);\r\n          break;\r\n        }\r\n\r\n        return colorGroups;\r\n      }, initalGroups);\r\n    }\r\n}\r\n","import { MainColor } from './types/enums/main-color.enum';\r\nimport { validateSelection } from './helpers/validate-selection';\r\nimport { Sign } from './types/enums/sign.enum';\r\nimport { EmotionalState } from './types/enums/emotional-state.enum';\r\nimport { badColors } from './constants/bad-colors';\r\nimport { goodColors } from './constants/good-colors';\r\nimport { ColorMap } from './types/color-map.type';\r\nimport { InterpretationSection } from './types/interpretation-section.interface';\r\nimport { SignMap } from './types/sign-map.type';\r\nimport { FunctionKeys } from './types/function-keys';\r\nimport { getInterpretation } from './helpers/get-interpretation';\r\nimport { Interpretation } from './types/interpretation.type';\r\nimport { LuscherFunction } from './types/luscher-function.interface';\r\nimport { InterpretationLanguage } from './types/enums/interpretation-language.enum';\r\nimport { Translations } from './types/translations.interface';\r\n\r\ninterface PsychologicalStateResult {\r\n  anxietyLevels: ColorMap<1 | 2 | 3>;\r\n  emotionalStates: ColorMap<EmotionalState>;\r\n}\r\n\r\nexport class TwoStageTest {\r\n  /** Obtained color selections */\r\n  readonly selections: [MainColor[], MainColor[]];\r\n  /** Color pairs that occur in both selections */\r\n  readonly pairs: [MainColor, MainColor][];\r\n  /** Luscher groups in each selection */\r\n  readonly groups: [MainColor, MainColor?][][];\r\n  /** State of disturbance and compensation by color for each selection */\r\n  readonly emotionalStates: [ColorMap<EmotionalState>, ColorMap<EmotionalState>] = [{}, {}];\r\n  /** State of anxiety level by color for each selection */\r\n  readonly anxietyLevels: [ColorMap<1 | 2 | 3>, ColorMap<1 | 2 | 3>] = [{}, {}];\r\n  /** Total anxiety level for each selection */\r\n  readonly totalAnxietyLevel: [number, number];\r\n  /** Interpretation for total anxiety level of second selection */\r\n  readonly anxietyLevelInterpretation: Translations<string>;\r\n  /** Signs for each color */\r\n  readonly signs: [ColorMap<[Sign, Sign?]>, ColorMap<[Sign, Sign?]>] = [{}, {}];\r\n  /** Colors for each sign */\r\n  readonly signMaps: [SignMap<MainColor[]>, SignMap<MainColor[]>];\r\n  /** Final color pairs used to get interpretation by sign for each selection */\r\n  readonly interpretationPairs: [SignMap<FunctionKeys[]>, SignMap<FunctionKeys[]>];\r\n\r\n  constructor(\r\n    firstSelection: MainColor[],\r\n    secondSelection: MainColor[],\r\n  ) {\r\n    validateSelection(firstSelection);\r\n    validateSelection(secondSelection);\r\n\r\n    this.selections = [firstSelection, secondSelection];\r\n    const [firstEmotionalStates, secondEmotionalStates] = this.getPsychologicalState();\r\n\r\n    this.pairs = this.getPairs();\r\n    this.emotionalStates = [\r\n      firstEmotionalStates.emotionalStates,\r\n      secondEmotionalStates.emotionalStates,\r\n    ];\r\n    this.anxietyLevels = [\r\n      firstEmotionalStates.anxietyLevels,\r\n      secondEmotionalStates.anxietyLevels,\r\n    ];\r\n    this.totalAnxietyLevel = this.getTotalAnxietyLevel();\r\n    this.anxietyLevelInterpretation = this.getAnxietyLevelInterpretation();\r\n    this.groups = this.getGroups();\r\n    this.signs = this.getSigns();\r\n    this.signMaps = this.getSignMaps();\r\n    this.interpretationPairs = this.getInterpretationPairs();\r\n  }\r\n\r\n  /**\r\n   * @param lang Interpretation language\r\n   * @returns Interpretation on chosen language\r\n   */\r\n  async getInterpretation(lang: InterpretationLanguage | 'multi' = InterpretationLanguage.ENGLISH): Promise<[\r\n    InterpretationSection[],\r\n    InterpretationSection[]\r\n  ]> {\r\n    const interpretations = await getInterpretation(lang);\r\n\r\n    const first = this.getInterpretationForSelection(\r\n      this.interpretationPairs[0],\r\n      interpretations,\r\n    );\r\n    const second = this.getInterpretationForSelection(\r\n      this.interpretationPairs[1],\r\n      interpretations,\r\n    );\r\n\r\n    return [first, second];\r\n  }\r\n\r\n  private getInterpretationForSelection(\r\n    interpretationPairs: SignMap<FunctionKeys[]>,\r\n    interpretations: SignMap<Interpretation>,\r\n  ): InterpretationSection[] {\r\n    const interpretation: InterpretationSection[] = Object.entries(interpretationPairs)\r\n      .filter(([, pairs]) => Boolean(pairs.length))\r\n      .map(([sign, pairs]) => {\r\n        const signInterpretationSource = interpretations[sign as Sign];\r\n        const signInterpretation: LuscherFunction[] = pairs\r\n          .map((pair) => signInterpretationSource[pair]);\r\n\r\n        return {\r\n          title: signInterpretationSource.title,\r\n          interpretation: signInterpretation,\r\n        };\r\n      });\r\n\r\n    return interpretation;\r\n  }\r\n\r\n  private getPsychologicalState(): [PsychologicalStateResult, PsychologicalStateResult] {\r\n    const first = this.getPsychologicalStateForSelection(this.selections[0]);\r\n    const second = this.getPsychologicalStateForSelection(this.selections[1]);\r\n\r\n    return [first, second];\r\n  }\r\n\r\n  private getPsychologicalStateForSelection(selection: MainColor[]): PsychologicalStateResult {\r\n    const anxietyLevels: ColorMap<1 | 2 | 3> = {};\r\n    const emotionalStates: ColorMap<EmotionalState> = {};\r\n    let lastCompensationIndex: number | null = null;\r\n    let firstDisturbanceIndex: number | null = null;\r\n\r\n    selection.forEach((color, index) => {\r\n      if (index < 3 && badColors.includes(color)) {\r\n        lastCompensationIndex = index;\r\n      }\r\n\r\n      if (index > 4 && goodColors.includes(color) && !firstDisturbanceIndex) {\r\n        firstDisturbanceIndex = index;\r\n      }\r\n    });\r\n\r\n    selection.forEach((color, index) => {\r\n      if (index < 3 && badColors.includes(color)) {\r\n        anxietyLevels[color] = (3 - index) as 1 | 2 | 3;\r\n      }\r\n\r\n      if (lastCompensationIndex !== null && lastCompensationIndex >= index) {\r\n        emotionalStates[color] = EmotionalState.COMPENSATION;\r\n      }\r\n\r\n      if (index > 4 && goodColors.includes(color)) {\r\n        anxietyLevels[color] = (index - 4) as 1 | 2 | 3;\r\n      }\r\n\r\n      if (firstDisturbanceIndex && firstDisturbanceIndex <= index) {\r\n        emotionalStates[color] = EmotionalState.DISTURBANCE;\r\n      }\r\n    });\r\n\r\n    return {\r\n      anxietyLevels,\r\n      emotionalStates,\r\n    };\r\n  }\r\n\r\n  private getTotalAnxietyLevel(): [number, number] {\r\n    const first = this.getTotalAnxietyLevelForSelection(this.anxietyLevels[0]);\r\n    const second = this.getTotalAnxietyLevelForSelection(this.anxietyLevels[1]);\r\n\r\n    return [first, second];\r\n  }\r\n\r\n  private getTotalAnxietyLevelForSelection(selectionAnxietyLevels: ColorMap<1 | 2 | 3>): number {\r\n    const initAnxietyLevel: number = 0;\r\n\r\n    const totalAnxietyLevel = Object.values(selectionAnxietyLevels)\r\n      .reduce((total, currentAnxietyLevel) => {\r\n        if (typeof total !== 'undefined' && currentAnxietyLevel) return total + currentAnxietyLevel;\r\n\r\n        return total;\r\n      }, initAnxietyLevel);\r\n\r\n    return totalAnxietyLevel;\r\n  }\r\n\r\n  private getAnxietyLevelInterpretation(): Translations<string> {\r\n    const [, total] = this.totalAnxietyLevel;\r\n\r\n    switch (true) {\r\n    case total < 3:\r\n      return {\r\n        ru: 'незначительная тревожность',\r\n        en: 'slight anxiety',\r\n      };\r\n\r\n    case total < 7:\r\n      return {\r\n        ru: 'эмоциональная напряженность',\r\n        en: 'emotional tension',\r\n      };\r\n\r\n    case total < 11:\r\n      return {\r\n        ru: 'состояние дезадаптации',\r\n        en: 'state of maladjustment',\r\n      };\r\n\r\n    case total < 12:\r\n      return {\r\n        ru: 'психологический и физиологический стресс',\r\n        en: 'psychological and physiological stress',\r\n      };\r\n\r\n    default:\r\n      throw new Error('Something went wrong!');\r\n    }\r\n  }\r\n\r\n  private getPairs(): [MainColor, MainColor][] {\r\n    const pairs: [MainColor, MainColor][] = [];\r\n    const [firstSelection, secondSelection] = this.selections;\r\n\r\n    firstSelection.forEach((color, index) => {\r\n      const firstColorIndex = secondSelection.indexOf(color);\r\n      const colorToCompareTo = firstSelection[index + 1];\r\n      const previousColor = secondSelection[firstColorIndex - 1];\r\n      const nextColor = secondSelection[firstColorIndex + 1];\r\n      const isPreviousMatched = firstColorIndex - 1 >= 0 && previousColor === colorToCompareTo;\r\n      const isNextMatched = firstColorIndex + 1 < secondSelection.length\r\n       && nextColor === colorToCompareTo;\r\n\r\n      if (index + 1 >= firstSelection.length) return pairs;\r\n\r\n      if (isPreviousMatched || isNextMatched) {\r\n        pairs.push([firstSelection[index], colorToCompareTo]);\r\n      }\r\n\r\n      return pairs;\r\n    });\r\n\r\n    return pairs;\r\n  }\r\n\r\n  private getGroups(): [MainColor, MainColor?][][] {\r\n    const first: [MainColor, MainColor?][] = this.getGroupsForSelection(\r\n      this.selections[0],\r\n      this.emotionalStates[0],\r\n    );\r\n    const second: [MainColor, MainColor?][] = this.getGroupsForSelection(\r\n      this.selections[1],\r\n      this.emotionalStates[1],\r\n    );\r\n\r\n    return [first, second];\r\n  }\r\n\r\n  private getGroupsForSelection(\r\n    selection: MainColor[],\r\n    emotionalStates: ColorMap<EmotionalState>,\r\n  ): [MainColor, MainColor?][] {\r\n    const groups: [MainColor, MainColor?][] = [];\r\n\r\n    selection.forEach((color, index) => {\r\n      const nextColor = selection[index + 1] as MainColor | undefined;\r\n      const hasNext = typeof nextColor !== 'undefined';\r\n      const isEmotional = Boolean(emotionalStates[color]);\r\n      const isNextEmotional = Boolean(hasNext && emotionalStates[nextColor!]);\r\n      const hasGroup = Boolean(groups.find((pair) => pair.includes(color)));\r\n      const hasPairWithNext = Boolean(hasNext && this.pairs.find((pair) => {\r\n        const hasCurrentColor = pair.includes(color);\r\n        const hasNextColor = pair.includes(nextColor!);\r\n\r\n        return hasCurrentColor && hasNextColor;\r\n      }));\r\n      const isNextAlreadyInPair = Boolean(hasNext && this.pairs.find((pair) => {\r\n        const hasNextColor = pair.includes(nextColor!);\r\n        const hasNextAfterNextColor = pair.includes(selection[index + 2]);\r\n\r\n        return hasNextColor && hasNextAfterNextColor;\r\n      }));\r\n\r\n      if (hasPairWithNext || (isEmotional && isNextEmotional)) {\r\n        groups.push([color, nextColor]);\r\n\r\n        return;\r\n      }\r\n\r\n      if (hasGroup) {\r\n        return;\r\n      }\r\n\r\n      if (isNextAlreadyInPair || typeof nextColor === 'undefined') {\r\n        groups.push([color]);\r\n\r\n        return;\r\n      }\r\n\r\n      if ((!isEmotional && !isNextEmotional) || typeof selection[index + 2] === 'undefined') {\r\n        groups.push([color, nextColor]);\r\n      }\r\n    });\r\n\r\n    return groups;\r\n  }\r\n\r\n  private getSigns(): [ColorMap<[Sign, Sign?]>, ColorMap<[Sign, Sign?]>] {\r\n    const first: ColorMap<[Sign, Sign?]> = this.getSignsForSelection(\r\n      this.selections[0],\r\n      this.groups[0],\r\n      this.emotionalStates[0],\r\n    );\r\n    const second: ColorMap<[Sign, Sign?]> = this.getSignsForSelection(\r\n      this.selections[1],\r\n      this.groups[1],\r\n      this.emotionalStates[1],\r\n    );\r\n\r\n    return [first, second];\r\n  }\r\n\r\n  private getSignsForSelection(\r\n    selection: MainColor[],\r\n    groups: [MainColor, MainColor?][],\r\n    emotionalStates: ColorMap<EmotionalState>,\r\n  ): ColorMap<[Sign, Sign?]> {\r\n    const signs: ColorMap<[Sign, Sign?]> = {};\r\n\r\n    groups[0].forEach((color) => {\r\n      if (typeof color === 'undefined') return;\r\n\r\n      signs[color] = [Sign.PLUS];\r\n    });\r\n\r\n    groups[groups.length - 1].forEach((color) => {\r\n      if (typeof color === 'undefined') return;\r\n\r\n      signs[color] = [Sign.MINUS];\r\n    });\r\n\r\n    selection.forEach((color) => {\r\n      if (emotionalStates[color]) {\r\n        const sign = emotionalStates[color] === EmotionalState.COMPENSATION\r\n          ? Sign.PLUS\r\n          : Sign.MINUS;\r\n\r\n        signs[color] = [sign];\r\n      }\r\n    });\r\n\r\n    const firstColorWithoutSign = selection.find((color) => !signs[color]);\r\n    const asteriskGroup = groups.find((group) => group.includes(firstColorWithoutSign));\r\n\r\n    asteriskGroup?.forEach((color) => {\r\n      if (typeof color === 'undefined' || selection.indexOf(color) === 1) return;\r\n\r\n      if (signs[color]) {\r\n        signs[color]?.push(Sign.ASTERISK);\r\n\r\n        return;\r\n      }\r\n\r\n      signs[color] = [Sign.ASTERISK];\r\n    });\r\n\r\n    selection.forEach((color) => {\r\n      if (signs[color]) return;\r\n\r\n      const equalGroup = groups.find((group) => group.includes(color));\r\n\r\n      const hasAsterisk = Boolean(equalGroup?.find((equalGroupColor) => {\r\n        if (typeof equalGroupColor === 'undefined') return false;\r\n\r\n        return signs[equalGroupColor]?.includes(Sign.ASTERISK);\r\n      }));\r\n\r\n      if (hasAsterisk) return;\r\n\r\n      equalGroup?.forEach((groupColor) => {\r\n        if (typeof groupColor === 'undefined') return;\r\n\r\n        const hasEqual = Boolean(signs[groupColor]?.includes(Sign.EQUAL));\r\n\r\n        if (signs[groupColor] && !hasEqual) {\r\n          signs[groupColor]?.push(Sign.EQUAL);\r\n\r\n          return;\r\n        }\r\n\r\n        signs[groupColor] = [Sign.EQUAL];\r\n      });\r\n    });\r\n\r\n    return signs;\r\n  }\r\n\r\n  private getSignMaps(): [SignMap<MainColor[]>, SignMap<MainColor[]>] {\r\n    const first: SignMap<MainColor[]> = this.getSignMapForSelection(\r\n      this.selections[0],\r\n      this.signs[0],\r\n    );\r\n    const second: SignMap<MainColor[]> = this.getSignMapForSelection(\r\n      this.selections[1],\r\n      this.signs[1],\r\n    );\r\n\r\n    return [first, second];\r\n  }\r\n\r\n  private getSignMapForSelection(\r\n    selection: MainColor[],\r\n    signs: ColorMap<[Sign, Sign?]>,\r\n  ): SignMap<MainColor[]> {\r\n    const initialSignMap: SignMap<MainColor[]> = {\r\n      [Sign.PLUS]: [],\r\n      [Sign.MINUS]: [],\r\n      [Sign.ASTERISK]: [],\r\n      [Sign.EQUAL]: [],\r\n    };\r\n    const initIndexMap: ColorMap<number> = {};\r\n    const indexMap = selection.reduce((map, color, index) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      map[color] = index;\r\n\r\n      return map;\r\n    }, initIndexMap);\r\n\r\n    const signMap = Object.entries(signs)\r\n      .map(([color, colorSigns]) => [Number(color), colorSigns] as [MainColor, [Sign, Sign?]])\r\n      .sort((a, b) => {\r\n        const aIndex = indexMap[a[0]];\r\n        const bIndex = indexMap[b[0]];\r\n\r\n        if (typeof aIndex === 'undefined' || typeof bIndex === 'undefined') return 0;\r\n\r\n        return aIndex - bIndex;\r\n      })\r\n      .reduce((map, [color, colorSigns]) => {\r\n        const mainColor = Number(color) as MainColor;\r\n\r\n        colorSigns?.forEach((sign) => {\r\n          if (!sign) return;\r\n\r\n          map[sign].push(mainColor);\r\n        });\r\n\r\n        return map;\r\n      }, initialSignMap);\r\n\r\n    return signMap;\r\n  }\r\n\r\n  private getInterpretationPairs(): [\r\n    SignMap<FunctionKeys[]>,\r\n    SignMap<FunctionKeys[]>\r\n    ] {\r\n    const first = this.getInterpretationPairsForSelection(this.signMaps[0]);\r\n    const second = this.getInterpretationPairsForSelection(this.signMaps[1]);\r\n\r\n    return [first, second];\r\n  }\r\n\r\n  private getInterpretationPairsForSelection(\r\n    signMap: SignMap<MainColor[]>,\r\n  ): SignMap<FunctionKeys[]> {\r\n    const initialInterpretationPairs: SignMap<FunctionKeys[]> = {\r\n      [Sign.PLUS]: [],\r\n      [Sign.MINUS]: [],\r\n      [Sign.ASTERISK]: [],\r\n      [Sign.EQUAL]: [],\r\n    };\r\n\r\n    const interpretationPairs = Object.entries(signMap).reduce((map, [sign, colors]) => {\r\n      if (colors.length === 1) {\r\n        map[sign as Sign].push(colors[0].toString() as FunctionKeys);\r\n\r\n        return map;\r\n      }\r\n\r\n      const [emptyString, ...interpretations] = colors.map<FunctionKeys>((color, index) => {\r\n        if (index === 0) return '' as FunctionKeys;\r\n\r\n        return [colors[index - 1], colors[index]].join('') as FunctionKeys;\r\n      });\r\n\r\n      // eslint-disable-next-line no-param-reassign\r\n      map[sign as Sign] = interpretations;\r\n\r\n      return map;\r\n    }, initialInterpretationPairs);\r\n\r\n    return interpretationPairs;\r\n  }\r\n}\r\n","/** Hex codes for test colors */\r\nexport enum ColorHex {\r\n  BLUE = '#004983',\r\n  GREEN = '#1D9772',\r\n  RED = '#F12F23',\r\n  YELLOW = '#F2DD00',\r\n  PURPLE = '#D42481',\r\n  BROWN = '#C55223',\r\n  BLACK = '#231F20',\r\n  GRAY = '#98938D',\r\n}\r\n","export enum EmotionalState {\r\n  DISTURBANCE = 'D',\r\n  COMPENSATION = 'C'\r\n}\r\n","export enum InterpretationLanguage {\r\n  ENGLISH = 'en',\r\n  RUSSIAN = 'ru',\r\n}\r\n","/** Identificators of test colors */\r\nexport enum MainColor {\r\n    BLUE = 1,\r\n    GREEN = 2,\r\n    RED = 3,\r\n    YELLOW = 4,\r\n    PURPLE = 5,\r\n    BROWN = 6,\r\n    BLACK = 7,\r\n    GRAY = 0,\r\n}\r\n","export enum Sign {\r\n  PLUS = '+',\r\n  MINUS ='-',\r\n  EQUAL = '=',\r\n  ASTERISK = '*',\r\n}\r\n"],"sourceRoot":""}