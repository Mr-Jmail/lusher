import { MainColor } from './types/enums/main-color.enum';
import { Sign } from './types/enums/sign.enum';
import { EmotionalState } from './types/enums/emotional-state.enum';
import { ColorMap } from './types/color-map.type';
import { InterpretationSection } from './types/interpretation-section.interface';
import { SignMap } from './types/sign-map.type';
import { FunctionKeys } from './types/function-keys';
import { InterpretationLanguage } from './types/enums/interpretation-language.enum';
import { Translations } from './types/translations.interface';
export declare class TwoStageTest {
    /** Obtained color selections */
    readonly selections: [MainColor[], MainColor[]];
    /** Color pairs that occur in both selections */
    readonly pairs: [MainColor, MainColor][];
    /** Luscher groups in each selection */
    readonly groups: [MainColor, MainColor?][][];
    /** State of disturbance and compensation by color for each selection */
    readonly emotionalStates: [ColorMap<EmotionalState>, ColorMap<EmotionalState>];
    /** State of anxiety level by color for each selection */
    readonly anxietyLevels: [ColorMap<1 | 2 | 3>, ColorMap<1 | 2 | 3>];
    /** Total anxiety level for each selection */
    readonly totalAnxietyLevel: [number, number];
    /** Interpretation for total anxiety level of second selection */
    readonly anxietyLevelInterpretation: Translations<string>;
    /** Signs for each color */
    readonly signs: [ColorMap<[Sign, Sign?]>, ColorMap<[Sign, Sign?]>];
    /** Colors for each sign */
    readonly signMaps: [SignMap<MainColor[]>, SignMap<MainColor[]>];
    /** Final color pairs used to get interpretation by sign for each selection */
    readonly interpretationPairs: [SignMap<FunctionKeys[]>, SignMap<FunctionKeys[]>];
    constructor(firstSelection: MainColor[], secondSelection: MainColor[]);
    /**
     * @param lang Interpretation language
     * @returns Interpretation on chosen language
     */
    getInterpretation(lang?: InterpretationLanguage | 'multi'): Promise<[InterpretationSection[], InterpretationSection[]]>;
    private getInterpretationForSelection;
    private getPsychologicalState;
    private getPsychologicalStateForSelection;
    private getTotalAnxietyLevel;
    private getTotalAnxietyLevelForSelection;
    private getAnxietyLevelInterpretation;
    private getPairs;
    private getGroups;
    private getGroupsForSelection;
    private getSigns;
    private getSignsForSelection;
    private getSignMaps;
    private getSignMapForSelection;
    private getInterpretationPairs;
    private getInterpretationPairsForSelection;
}
